spring.datasource.url=jdbc:postgresql://localhost:5432/registration
spring.datasource.username=kumoreg
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.initial-size=5
spring.datasource.max-active=50
spring.datasource.max-idle=15
spring.datasource.min-idle=3
spring.datasource.test-while-idle=true
spring.datasource.test-on-borrow=true
spring.datasource.test-on-connect=true
spring.datasource.validation-query=SELECT 1
spring.datasource.time-between-eviction-runs-millis=5000
spring.datasource.min-evictable-idle-time-millis=60000
spring.datasource.jmx-enabled=true

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect


spring.datasource.schema=classpath:database/schema.sql
#spring.datasource.data=seed-data.sql
spring.datasource.initialization-mode=always
spring.datasource.continueOnError=true

# Store sessions in database
spring.sessoin.store-type=jdbc
spring.session.jdbc.initialize-schema=always
# Sessions time out after 30 minutes of inactivity
spring.session.timeout=1800
server.servlet.session.timeout=1800

spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
spring.servlet.multipart.enabled=true

# Server
#
# Server port number (default 8080)
server.port = 8080

# Required to work properly with (AWS) load balancers, otherwise redirects would be sent to http://... instead of
# https://...
server.tomcat.protocol-header=x-forwarded-proto
server.tomcat.remote-ip-header=x-forwarded-for

# Logging
logging.pattern.console=${CONSOLE_LOG_PATTERN:%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %X{user} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}
logging.pattern.file=${FILE_LOG_PATTERN:%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %X{user} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"

# Start server in training mode, which creates an extra set of users with default permissions
kumoreg.trainingMode=true

# Set a "real" password for test users (so they don't have to change it when logging in the first time.) If false,
# kumoreg.trainingMode.password is ignored. If true, the demo users' password will be set to the value of
# kumoreg.trainingMoe.password
kumoreg.trainingMode.setActualPassword=true
kumoreg.trainingMode.password=test

